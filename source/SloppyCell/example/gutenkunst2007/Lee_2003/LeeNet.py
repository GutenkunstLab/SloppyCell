from SloppyCell.ReactionNetworks import *

net = Network('Lee2003')

net.add_compartment('extract')

net.add_parameter('Dsh0', 100, name = r'Dsh^0')
net.add_parameter('APC0', 100, name = r'APC^0')
net.add_parameter('TCF0', 15, name = r'TCF^0')
net.add_parameter('GSK0', 50, name = r'GSK^0')

net.add_species('X2', 'extract', 0)#, name=r'Dsh_a')
net.add_species('X3', 'extract', 0)#, name=r'APC^*/axin^*/GSK3')
net.add_species('X4', 'extract', 0)#, name=r'APC/axin/GSK3')
net.add_species('X9', 'extract', 0)#, name=r'\beta-catenin^*/APC^*/axin^*/GSK3')
net.add_species('X10', 'extract', 0)#, name=r'\beta-catenin^*')
net.add_species('X11', 'extract', 0)#, name=r'\beta-catenin')
net.add_species('X12', 'extract', 0)#, name=r'Axin')

#net.add_species('X5', 'extract', 'GSK0', is_constant=True)#, name=r'GSK3')
net.add_species('X5', 'extract', 'GSK0', is_constant=True)#, name=r'GSK3')

net.add_species('X1', 'extract')#, name=r'Dsh_i')
net.add_species('X6', 'extract')#, name=r'APC/axin')
net.add_species('X7', 'extract')#, name=r'APC')
net.add_species('X8', 'extract')#, name=r'\beta-catenin/APC^*/axin^*/GSK3')
net.add_species('X13', 'extract')#, name=r'TCF')
net.add_species('X14', 'extract')#, name=r'\beta-catenin/TCF')
net.add_species('X15', 'extract')#, name=r'\beta-catenin/APC')

net.add_parameter('K7', 50, name = r'K_7')
net.add_parameter('K8', 120, name = r'K_8')
net.add_parameter('K16', 30, name = r'K_16')
net.add_parameter('K17', 1200, name = r'K_17')

net.add_parameter('k1', 0.182, name = r'k_{1}')
net.add_parameter('k2', 1.82e-2, name = r'k_{2}')
net.add_parameter('k3', 5e-2, name = r'k_{3}')
net.add_parameter('k4', 0.267, name = r'k_{4}')
net.add_parameter('k5', 0.133, name = r'k_{5}')
net.add_parameter('k6', 9.09e-2, name = r'k_{6}')
net.add_parameter('km6', 0.909, name = 'k_{-6}')
net.add_parameter('k9', 206, name = r'k_{9}')
net.add_parameter('k10', 206, name = r'k_{10}')
net.add_parameter('k11', 0.417, name = r'k_{11}')
net.add_parameter('k13', 2.57e-4, name = r'k_{13}')
net.add_parameter('k15', 0.167, name = r'k_{15}')

net.add_parameter('v12', 0.423, name = r'v_{12}')
net.add_parameter('v14', 8.22e-5, name = r'v_{14}')

#net.add_parameter('k1', 0.18, name = r'k_{1}')
#net.add_parameter('k2', 1.8e-2, name = r'k_{2}')
#net.add_parameter('k3', 5e-2, name = r'k_{3}')
#net.add_parameter('k4', 0.27, name = r'k_{4}')
#net.add_parameter('k5', 0.13, name = r'k_{5}')
#net.add_parameter('k6', 9.1e-2, name = r'k_{6}')
#net.add_parameter('km6', 0.91, name = 'k_{-6}')
#net.add_parameter('k9', 210, name = r'k_{9}')
#net.add_parameter('k10', 210, name = r'k_{10}')
#net.add_parameter('k11', 0.42, name = r'k_{11}')
#net.add_parameter('k13', 2.6e-4, name = r'k_{13}')
#net.add_parameter('k15', 0.17, name = r'k_{15}')
#
#net.add_parameter('v12', 0.42, name = r'v_{12}')
#net.add_parameter('v14', 8.2e-5, name = r'v_{14}')

net.add_parameter('W', 0, is_optimizable=False)

net.add_rate_rule('X2', 'k1*W*(Dsh0-X2)-k2*X2')
net.add_rate_rule('X9', 'k9 * X8 - k10*X9')
net.add_rate_rule('X10', 'k10*X9-k11*X10')
net.add_rate_rule('X4', '-k3*X2*X4 - k4*X4 + k5*X3 + k6*X5*X6 - km6*X4')

net.add_parameter('a')
net.add_assignment_rule('a', '1+APC0*K17/(K7*(K17+X11))')
net.add_parameter('b')
net.add_assignment_rule('b', 'APC0*K17*X12/(K7*(K17+X11)**2)')
net.add_parameter('c')
net.add_assignment_rule('c', 'k3*X2*X4 - k6 * GSK0*APC0*K17*X12/(K7*(K17+X11)) + km6*X4 + v14 - k15*X12')
net.add_parameter('d')
net.add_assignment_rule('d', '1+X11/K8')
net.add_parameter('e')
net.add_assignment_rule('e', 'X3/K8')
net.add_parameter('f')
net.add_assignment_rule('f', 'k4*X4 - k5*X3 - k9*X3*X11/K8 + k10*X9')
net.add_parameter('g')
net.add_assignment_rule('g', '1+X3/K8+TCF0*K16/(K16+X11)**2 + APC0*K17/(K17+X11)**2')
net.add_parameter('h')
net.add_assignment_rule('h', 'X11/K8')
net.add_parameter('i')
net.add_assignment_rule('i', 'v12 - (k9*X3/K8 + k13)*X11')

net.add_parameter('rhsX11', name = 'rhs_{X11}')
net.add_assignment_rule('rhsX11', '(d*i - f*h)/(d*g - e*h)')

net.add_rate_rule('X11', 'rhsX11')
net.add_rate_rule('X12', '(c + rhsX11*b)/a')
net.add_rate_rule('X3', '(e*i - f*g)/(e*h - d*g)')

net.add_assignment_rule('X1', 'Dsh0 - X2')
net.add_assignment_rule('X7', 'K17*APC0/(K17+X11)')
net.add_assignment_rule('X15', 'X11*APC0/(K17+X11)')
net.add_assignment_rule('X13', 'K16*TCF0/(K16+X11)')
net.add_assignment_rule('X14', 'X11*TCF0/(K16+X11)')
net.add_assignment_rule('X8', 'X3*X11/K8')
net.add_assignment_rule('X6', 'K17*X12*APC0/(K7*(K17+X11))')

# These are just for my own monitoring purposes
net.add_parameter('BCatenin', name = r'\beta-catenin')
net.add_assignment_rule('BCatenin', 'X8+X9+X10+X11+X14+X15')
net.add_parameter('Axin', name = r'Axin')
net.add_assignment_rule('Axin', 'X3+X4+X6+X8+X9+X12')
